Tasks Service Documentation (Hypermedia) 
========================================
:Author: Mike Amundsen
:Email:  mike@mamund.com

== Overview
This service provides a simple tasks management interface for creating and
marking tasks complete. There is also an option to filter tasks by title.

=== RFC2119 Words
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", 
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be 
interpreted as described in link:http://tools.ietf.org/html/rfc2119[RFC2119].

=== Media Type Support
All server response bodies SHOULD be returned using the 
xref:tasks-mt[Tasks+JSON Media Type]. All client write request
bodies (e.g. POST and PUT) MUST be sent using the  
xref:tasks-form[Form Media Type]. All client read requests (e.g. GET) MUST
be sent using xref:tasks-query[URL Query] strings.

== Supported Operations and Link Relation Values
Below is the list of link relation values and the operations they perform.

[[add]]
=== Create Tasks : +rel="add"+
The +add+ link relation value identifies the hypermedia control used to create
a new task to the list. The xref:data-title[+title+] data element SHOULD be included as an
argument for the +add+ hypermedia control.

.+rel="add"+
----
 {"rel" : "add", "href" : "...", "title" : "..."}
----

Clients MUST use the +POST+ method when activating this hypermedia control and
MUST use the xref:task-form[Form Media Type] when formating the payload.
Servers SHOULD return an HTTP status code of 204 upon successful completion of
the request.

If an error occurs while attempting this request, the server SHOULD return a 
xref:tasks-mt[Task+JSON] that contains the xref:data-error[+error+] data element along with the 
appropriate HTTP status code.

[[complete]]
=== Mark a Task Completed : +rel="complete"+
the +complete+ link relation value identifies the hypermedia control used to
mark a single task as completed. The xref:data-id[+id+] data element SHOULD be
included as an argument for the +complete+ hypermedia control.

.+rel="complete"+
----
 {"rel" : "complete", "href" : "...", "id" : "..."}
----

Clients MUST use the +POST+ method when activating this hypermedia control and
MUST use the xref:task-form[Form Media Type] when formating the payload. 
Servers SHOULD return an HTTP status code of 204 upon successful completion of
the request.

If an error occurs while attempting this request, the server SHOULD return a 
xref:tasks-mt[Task+JSON] that contains the xref:data-error[+error+] data element along with the 
appropriate HTTP status code.

[[collection]]
=== List of Tasks : +rel="collection"+
The +collection+ link relation value identifies the hypermedia control used to 
retrieve a list of all the tasks. There are no data elements for this hypermedia
control. Below is an example:

.+rel="collection"+
----
 {"rel" : "collection", "href" : "..."}
----

Clients MUST use the +GET+ method when activating this hypermedia control. 
Servers SHOULD return an HTTP status code of 200 upon successful completion of
the request along with a xref:tasks-mt[Tasks+JSON] media type response showing 
a list of tasks.

If an error occurs while attempting this request, the server SHOULD return a 
xref:tasks-mt[Task+JSON] that contains the xref:data-error[+error+] data element along with the 
appropriate HTTP status code.

[[search]]
=== Filtered List of Tasks : +rel="search"+
The +search+ link relation value identifies the hypermedia control used to 
retrieve a filtered list of tasks. The xref:data-title[+title+] data element
SHOULD be included as an argument for the +search+ hypermedia control.
Below is an example:

.+rel="search"+
----
 {"rel" : "search", "href" : "...", "title" : "..."}
----

Clients MUST use the +GET+ method when activating this hypermedia control and
MUST use a xref:tasks-query[URL Query] string when sending data elements to the server.
Servers SHOULD return an HTTP status code of 200 upon successful completion of
the request along with a xref:tasks-mt[Tasks+JSON] media type response showing 
a list of tasks.

If an error occurs while attempting this request, the server SHOULD return a 
xref:tasks-mt[Task+JSON] that contains the xref:data-error[+error+] data element along with the 
appropriate HTTP status code.

== Data Elements
the following data elements are used in the Task Service. All server and client
applications should be ready to handle these data elements for display and processing.

[[data-title]]
title::
   The +title+ data element is a string representing the task title. This value is
supplied by the client when attempting to create a new task.
[[data-id]]
id::
   The +id+ data element is a string representing the unique identifier for the task.
This value is generated by the server when creating a new task. 
[[data-error]]
error::
   The +error+ data element is a string representing a description of an error that
occured during a client request. Note that this string is not the HTTP status code or
HTTP status string (e.g. "400 Not Found"). Instead, this is a value unique to the 
Tasks service (e.g. "Invalid Task ID. Please try again").

== Media Types and Query Strings
Below is a list of payloads and query strings that can be sent from the client 
to the server along with a list of the common server responses.

[[tasks-mt]]
=== Task+JSON Media type : +application/tasks+json+
All server responses SHOULD be formatted in the Task+JSON media type. Below is a 
description of this media type. Note that this media type is not yet registered with
the IANA.

Below is a `map' of the Tasks+JSON media type.

.Tasks+JSON Media Type
----
{
  "tasks" : {

    "links" : [
      {"rel" : "collection", "href" : "..."},
      {"rel" : "search", "href" : "...", "title" : "..."},
      {"rel" : "add", "href" : "...", "title" : "..."}
    ],
    
    "collection" : [
      {"id" : "...", 
       "title" : "...", 
       "link" : {"rel" : "complete", "href" : "...", "id" : "...}
      },
      ... 
    ],
 
    "error" : "..."
  }
}
----

[[tasks-form]]
=== Form Media type : +application/x-www-forms-urlencoded+
The link:http://tools.ietf.org/search/rfc1866#section-8.2.1[Form Media Type] (as
described in RFC1866) is used to send updates from the client to the server. 
Essentially, this means clients create payloads using a name/value pair approach. 

For example, if the hypermedia control indicates an argument named +title+ can be 
sent to the server, the client can format a payload that looks like the following:

.Form Media Type Payload
----
title=this%20is%20a%20new%20task
----
 
[[tasks-query]]
=== URL Query Strings
The link:http://tools.ietf.org/html/rfc3986#section-3[URI Query] (as described in 
RFC3986, is used to send read-only queries from the client to the server. Essentially, 
this means clients create URL query strings using a name/value pair approach.

For example, if the hypermedia cxontrol indicates an argument named +title+ can be
sent to the server, the clienht can format a query URL that looks like the following:

.URL Query String
----
http://example.org/tasks/?title=this+is+a+test
----

== Extensibility
This document describes the Tasks Hypermedia service. Any extensions to this service
MUST not redefine or change the use/meaning of any link relations, vocabulary names, 
or any elements of the +application/tasks+json+ media type as defined in this document. 
Clients that do not recognize extensions to the service SHOULD ignore them.

The details of designing and implementing extensions is beyond the scope of 
this document.

NOTE: It is possible that future forward-compatible modifications to this 
specification will include new link relations, objects, arrays, properties, etc. Extension 
designers should take care to prevent future modifications from breaking or 
redefining those modifications.
